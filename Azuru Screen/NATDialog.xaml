<Window x:Class="ASU.NATDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="Holepunch through NAT?" Height="143.9" Width="285.158" WindowStartupLocation="CenterScreen" ResizeMode="NoResize" Closing="Window_Closing" Icon="asu.ico">
    <Window.Resources>
        <Style x:Key="FlatButton" TargetType="Button">
            <Setter Property="Background" Value="#FF40B9FF" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF258AC5" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF226C97" />
                </Trigger>
            </Style.Triggers>

        </Style>
        <Style x:Key="FlatRedButton" TargetType="Button">
            <Setter Property="Background" Value="#FFD86060" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontSize" Value="25" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBD3737" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBD3737" />
                </Trigger>
            </Style.Triggers>

        </Style>
    </Window.Resources>
    <Grid>
        <Grid x:Name="ButtonsGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Content="ALLOW" Margin="10" Style="{StaticResource FlatButton}" Click="Button_Click_2"/>
            <Button Grid.Column="1" Content="DENY" Margin="10" Style="{StaticResource FlatRedButton}" Click="Button_Click_3"/>
        </Grid>
        <Grid x:Name="StatusGrid" Visibility="Hidden">
            <Label Content="HOLEPUNCHING..." HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center" FontSize="30"/>

        </Grid>
    </Grid>
</Window>
