<Window x:Class="ASU.IPProfileDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="Select IP Profile" Height="228" Width="374" WindowStartupLocation="CenterScreen" Background="White" Icon="/ASU;component/asu.ico" ResizeMode="NoResize">
    <Window.Resources>
        <Style x:Key="FlatButton" TargetType="Button">
            <Setter Property="Background" Value="#FF40B9FF" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF258AC5" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF226C97" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="FlatRedButton" TargetType="Button">
            <Setter Property="Background" Value="#FFD86060" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="true">
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBD3737" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="FontWeight" Value="Normal" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFBD3737" />
                </Trigger>
            </Style.Triggers>

        </Style>
    </Window.Resources>
    <Grid>
        <Grid x:Name="ContentGrid">
            <GroupBox Header="IP Connection Details" Margin="10,52,10,0" Height="115" VerticalAlignment="Top">
                <Grid>
                    <Label Content="Address" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                    <TextBox x:Name="AddressTextbox" HorizontalAlignment="Left" Height="23" Margin="80,13,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="230" TextChanged="AddressTextbox_TextChanged"/>
                    <xctk:IntegerUpDown x:Name="portBox" HorizontalAlignment="Left" Margin="80,52,0,0" VerticalAlignment="Top" Value="8076" Maximum="65535" Minimum="0" Width="81" ValueChanged="portBox_ValueChanged" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" FlowDirection="RightToLeft"/>
                    <Label Content="Port" HorizontalAlignment="Left" Margin="10,49,0,0" VerticalAlignment="Top"/>
                </Grid>
            </GroupBox>

            <Label Content="Profile" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
            <ComboBox x:Name="profileSelection" HorizontalAlignment="Right" Margin="0,13,70,0" VerticalAlignment="Top" Width="225" SelectionChanged="ComboBox_SelectionChanged">

            </ComboBox>
            <Button Content="+" HorizontalAlignment="Right" Margin="0,11,38,0" VerticalAlignment="Top" Height="25" Width="25" Style="{StaticResource FlatButton}" Padding="0" FontSize="14" Click="Button_Click_1"/>
            <Button Content="×" HorizontalAlignment="Right" Margin="0,11,10,0" VerticalAlignment="Top" Height="25" Width="25" Style="{StaticResource FlatRedButton}" Padding="0" FontSize="14" Click="Button_Click_2"/>
            <Grid VerticalAlignment="Bottom" Height="35">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Content="Select" Style="{StaticResource FlatButton}" BorderThickness="0" Click="Button_Click_3"/>
                <Button Grid.Column="1" Content="Cancel" Style="{StaticResource FlatRedButton}" BorderThickness="0" Click="Button_Click_4"/>
            </Grid>
        </Grid>
        <Grid x:Name="NewProfileGrid" Background="#D8000000" Visibility="Hidden">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="50"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Grid.Row="0" Content="Name of Profile" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Bottom" Foreground="White"/>
            <TextBox x:Name="ProfileNameTextbox" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Width="280" KeyDown="TextBox_KeyDown" />
            <Button Content="Add" Grid.Row="2" Height="30" Width="75" Style="{StaticResource FlatButton}" FontSize="16" VerticalAlignment="Top" Click="Button_Click" Focusable="False"/>

        </Grid>
    </Grid>
</Window>
